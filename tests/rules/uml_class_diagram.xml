<checkerrules>
<!-- TICKET -->
    <!-- ATTRIBUTE -->
    <!-- -description:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and f -->{FieldDeclarationModifiers} m and m.name="private" and f -->{FieldDeclarationType} st and st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="description"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String description" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -status:Status -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="Status" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="status"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String status" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -employee:Employee -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="Employee" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="employee"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String employee" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -customer:Customer -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="Customer" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="customer"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String customer" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -priority:int -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{PrimitiveType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                pt.name="int" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="priority"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private int priority" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -creationDate:Date -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="Date" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="creationDate"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private Date creationDate" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- -notes:List-Note- -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{ParameterizedType}, st : V{SimpleType}, st1: V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                pt -->{ParameterizedTypeType} st and
                st.name="List" and
                pt -->{ParameterizedTypeTypeArguments1} st1 and
                st1.name="Note" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="notes"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private List-Note- notes" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!--- KONSTRUKTOREN -->
    <!-- +Ticket(description:String, status:String, employee:Employee,
      customer:Customer, priority:int -->
    <rule type="presence" points="4">
        <!-- description:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Ticket" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="description" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- status:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Ticket" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="status" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="Status"
            report 0 end
        </query>
        <!-- employee:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Ticket" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="employee" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="Employee"
            report 0 end
        </query>
        <!-- employee:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Ticket" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="customer" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="Customer"
            report 0 end
        </query>
        <!-- priority:int -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Ticket" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="priority" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="int"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Der Konstruktor "public Ticket(String description, String status,
            String employee, String customer, int priority)" in der Klasse
            "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getDescription():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getDescription()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getDescription()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getStatus():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Status getStatus()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Status getStatus()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getEmployee():Employee -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Employee getEmployee()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Employee getEmployee()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getCustomer():Customer -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Customer getCustomer()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Customer getCustomer()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getCreationDate():Date -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Date getCreationDate()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Customer getCustomer()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getPriority():int -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public int getPriority()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public int getPriority()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +setPriority(int):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void setPriority(int)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void setPriority(int)" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +setStatus(Status):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void setStatus(Status)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void setStatus(Status)" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +setEmployee(Employee):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void setEmployee(Employee)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void setEmployee(Employee)" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +addNote(Note):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void addNote(Note)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void addNote(Note)" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +removeNote(Note):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void removeNote(Note)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void removeNote(Note)" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- +getNotes(List-Note-):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public List&lt;Note&gt; getNotes()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public List-Note- getNotes()" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
<!-- CUSTOMER -->
	<!-- ATTRIBUTE -->
	<!-- -email:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="email"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String email" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- -firstName:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="firstName"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String firstName" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- -lastName:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="lastName"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String lastName" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
	<!-- -company:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="company"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String company" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!--- KONSTRUKTOREN -->
    <!-- +Customer(String firstName, String lastName, String email, String company) -->
    <rule type="presence" points="4">
        <!-- firstName:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Customer" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="firstName" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- lastName:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Customer" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="lastName" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- email:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Customer" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="email" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- company:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Customer" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="company" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Der Konstruktor "public Customer(String firstName, String lastName,
            String email, String company)" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getEmail():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getEmail()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getEmail()" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- +getFirstName():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getFirstName()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getFirstName()" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- +getLastName():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getLastName()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getLastName()" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
    <!-- +getCompany():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Customer" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getCompany()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getCompany()" in der Klasse "Customer" fehlt.
        </feedback>
    </rule>
<!-- EMPLOYEE -->
	<!-- ATTRIBUTE -->
	<!-- -email:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="email"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String email" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- -firstName:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="firstName"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String firstName" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- -lastName:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="lastName"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String lastName" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
	<!-- -department:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} st and
                st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="department"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String department" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!--- KONSTRUKTOREN -->
    <!-- +Employee(String firstName, String lastName, String email, String company) -->
    <rule type="presence" points="4">
        <!-- firstName:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Employee" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="firstName" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- lastName:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Employee" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="lastName" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- email:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Employee" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="email" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- department:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Employee" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="department" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Der Konstruktor "public Employee(String firstName, String lastName,
            String email, String department)" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getEmail():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getEmail()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getEmail()" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- +getFirstName():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getFirstName()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getFirstName()" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- +getLastName():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getLastName()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getLastName()" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
    <!-- +getDepartment():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Employee" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getDepartment()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getDeparment()" in der Klasse "Employee" fehlt.
        </feedback>
    </rule>
<!-- TICKETMANAGER -->
	<!-- ATTRIBUTE -->
	<!-- -tickets:List&lt;Ticket&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{ParameterizedType}, st : V{SimpleType}, st1: V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Ticket" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                pt -->{ParameterizedTypeType} st and
                st.name="List" and
                pt -->{ParameterizedTypeTypeArguments1} st1 and
                st1.name="Ticket" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="tickets"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private List&lt;Ticket&gt; tickets" in der Klasse "Ticket" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getAll():List&lt;Ticket&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketManager" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public List&lt;Ticket&gt; getAll()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public List&lt;Ticket&gt; getAll()" in der Klasse "TicketManager" fehlt.
        </feedback>
    </rule>
    <!-- +getOldest():Ticket -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketManager" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Ticket getOldest()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Ticket getOldest()" in der Klasse "TicketManager" fehlt.
        </feedback>
    </rule>
    <!-- +next():Ticket -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketManager" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Ticket next()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Ticket next()" in der Klasse "TicketManager" fehlt.
        </feedback>
    </rule>
    <!-- +add(Ticket) -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketManager" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void add(Ticket)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void add(Ticket)" in der Klasse "TicketManager" fehlt.
        </feedback>
    </rule>
    <!-- +remove(Ticket) -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketManager" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void remove(Ticket)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void remove(Ticket)" in der Klasse "TicketManager" fehlt.
        </feedback>
    </rule>
<!-- LISTNODE -->
	<!-- ATTRIBUTE -->
	<!-- -next:ListNode&lt;E&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{ParameterizedType}, st : V{SimpleType}, st1: V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="ListNode" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                pt -->{ParameterizedTypeType} st and
                st.name="ListNode" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="next"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private ListNode&lt;E&gt; next" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
    <!-- -value:E -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{ParameterizedType}, st : V{SimpleType}, st1: V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="ListNode" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="value"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private Ticket value" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getNext():ListNode&lt;E&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="ListNode" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public ListNode&lt;E&gt; getNext()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public ListNode&lt;E&gt; getNext()" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
    <!-- +getValue():E -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="TicketNode" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public E getValue()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public E getValue()" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
    <!-- +setNext(ListNode&lt;E&gt;):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="ListNode" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void setNext(ListNode&lt;E&gt;)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void setNext(ListNode&lt;E&gt;)" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
    <!-- +setValue(E):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="ListNode" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void setValue(E)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void setValue(E)" in der Klasse "ListNode" fehlt.
        </feedback>
    </rule>
<!-- LIST -->
	<!-- ATTRIBUTE -->
	<!-- -head:ListNode&lt;E&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, pt : V{ParameterizedType}, st : V{SimpleType}, st1: V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations1} f and
                f -->{FieldDeclarationModifiers} m and
                m.name="private" and
                f -->{FieldDeclarationType} pt and
                pt -->{ParameterizedTypeType} st and
                st.name="ListNode" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="head"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private ListNode&lt;E&gt; head" in der Klasse "List" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +clear():void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void clear()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void clear()" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- +isEmpty():boolean -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public boolean isEmpty()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void isEmpty()" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- +size():int -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public int size()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public int size()" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- -getNodeAt(int):ListNode&lt;E&gt; -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "private ListNode&lt;E&gt; getNodeAt(int)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "private ListNode&lt;E&gt; getNodeAt(int)" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- +get(int):E -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public E get(int)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public E get(int)" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- +add(E):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void add(E)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void add(E)" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
    <!-- +remove(int):void -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="List" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public void remove(int)")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public void remove(int)" in der Klasse "List&lt;E&gt;" fehlt.
        </feedback>
    </rule>
<!-- NOTE -->
    <!-- ATTRIBUTE -->
    <!-- -title:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations1} f and f -->{FieldDeclarationModifiers} m and m.name="private" and f -->{FieldDeclarationType} st and st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="title"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String title" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- -content:String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations1} f and f -->{FieldDeclarationModifiers} m and m.name="private" and f -->{FieldDeclarationType} st and st.name="String" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="content"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private String content" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- -employee:Employee -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations1} f and f -->{FieldDeclarationModifiers} m and m.name="private" and f -->{FieldDeclarationType} st and st.name="Employee" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="employee"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private Employee employee" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- -creationDate:Date -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, f : V{FieldDeclaration}, m : V{Modifier}, st : V{SimpleType}, vdf: V{VariableDeclarationFragment} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations1} f and f -->{FieldDeclarationModifiers} m and m.name="private" and f -->{FieldDeclarationType} st and st.name="Date" and
                f -->{FieldDeclarationFragments} vdf and
                vdf.name="creationDate"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Das Attribut "private Date creationDate" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!--- KONSTRUKTOREN -->
    <!-- +Note(title:String, content:String, employee:Employee -->
    <rule type="presence" points="4">
        <!-- title:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Note" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="title" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- content:String -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Note" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="content" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="String"
            report 0 end
        </query>
        <!-- employee:Employee -->
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration}, svd : V{SingleVariableDeclaration}, st : V{SimpleType} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                m.constructor=true and
                m.name="Note" and
                m -->{MethodDeclarationParameters} svd and
                svd.name="employee" and
                svd -->{SingleVariableDeclarationType} st and
                st.name="Employee"
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Der Konstruktor "public Note(String title, String content,
            Employee employee)" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- METHODEN -->
    <!-- +getTitle():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getTitle()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getTitle()" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- +getContent():String -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public String getContent()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public String getContent()" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- +getEmployee():Employee -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Employee getEmployee()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Employee getEmployee()" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
    <!-- +getCreationDate():Date -->
    <rule type="presence" points="4">
        <query>
            from t : V{TypeDeclaration}, m : V{MethodDeclaration} with
                t.name="Note" and
                t -->{TypeDeclarationBodyDeclarations2} m and
                hasSignature(m, "public Date getCreationDate()")
            report 0 end
        </query>
        <feedback prefix="UML Klassendiagramm">
            Die Methode "public Date getCreationDate()" in der Klasse "Note" fehlt.
        </feedback>
    </rule>
</checkerrules>
